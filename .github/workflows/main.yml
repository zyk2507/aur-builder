name: Build AUR in Docker and Archive Upload

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build-aur:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (optional)
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t aur-builder:latest .

      - name: Run AUR builder container
        run: |
          # 将仓库内的 upload/ 和 packages/ 作为卷挂载到容器
          # 其中 /opt/upload 会被容器中的脚本 chmod 777
          docker run --rm \
            -v "${{ github.workspace }}/upload:/opt/upload" \
            -v "${{ github.workspace }}/packages:/opt/packages" \
            aur-builder:latest

      - name: Install archiver (7z)
        run: |
          sudo apt-get update
          sudo apt-get install -y p7zip-full

      - name: Compress upload/ with maximum ratio
        working-directory: ${{ github.workspace }}
        run: |
          # 确保有内容（若空则仍会生成空壳压缩包）
          if [ ! -d "upload" ]; then
            echo "ERROR: upload/ not found"
            exit 1
          fi

          # 统一输出名
          ARCHIVE_NAME="upload.7z"

          # 最大压缩（-mx=9），多线程（-mmt=on）
          # 将 upload/ 目录的内容打包到 upload.7z
          7z a -mx=9 -mmt=on "${ARCHIVE_NAME}" ./upload/*

          # 显示打包后大小（字节）
          BYTES=$(stat -c%s "${ARCHIVE_NAME}")
          echo "Packed size (bytes): ${BYTES}"

          # 阈值：1.9GB = 1900 * 1024 * 1024 字节
          THRESHOLD=$((1900 * 1024 * 1024))

          if [ "${BYTES}" -gt "${THRESHOLD}" ]; then
            echo "archive_needs_split=true" >> $GITHUB_ENV
          else
            echo "archive_needs_split=false" >> $GITHUB_ENV
          fi

      - name: Split archive if > 1.9GB
        if: env.archive_needs_split == 'true'
        run: |
          # 基于已生成的 upload.7z 进行分卷（每卷 1900MB）
          # 生成文件：upload.7z.part-000, upload.7z.part-001, ...
          split -b 1900m -d -a 3 upload.7z upload.7z.part-
          # 可选：保留原始整包或删除整包以节省空间
          # rm -f upload.7z

      - name: List outputs
        run: |
          ls -lah
          if [ -f "upload.7z" ]; then
            echo "Single archive present: upload.7z"
          fi
          if ls upload.7z.part-* >/dev/null 2>&1; then
            echo "Split parts present:"
            ls -lah upload.7z.part-*
          fi

      - name: Upload single archive artifact
        if: env.archive_needs_split == 'false'
        uses: actions/upload-artifact@v4
        with:
          name: upload-archive
          path: upload.7z
          if-no-files-found: error
          compression-level: 0  # 已经是最大压缩，不再二次压缩

      - name: Upload split archive artifacts
        if: env.archive_needs_split == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: upload-archive-split
          path: |
            upload.7z.part-*
          if-no-files-found: error
          compression-level: 0  # 分卷文件无需再压缩
